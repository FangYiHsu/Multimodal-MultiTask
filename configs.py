import torch
class Configs:
    def __init__(self):
        pass

configs = Configs()

# trainer related
configs.n_cpu = 0
configs.device = torch.device('cuda:0')
configs.batch_size_test = 40
configs.batch_size = 1
configs.epochs = 500
configs.lr = 0.1
configs.d_attn = 32
configs.gamma = 0.7
configs.seed = 1
configs.weight_decay = 0
configs.display_interval = 250
configs.num_epochs = 100
configs.early_stopping = True
configs.patience = 4
configs.gradient_clipping = True
configs.clipping_threshold = 1.
configs.log_interval =10
configs.save_model = 10
# data related
configs.input_dim = 1
configs.output_dim = 1
configs.input_length = 6
configs.output_length = 12
configs.input_gap = 1
configs.pred_shift = 24

# model related
configs.kernel_size = (3, 3)
configs.bias = True
configs.hidden_dim = (64, 64, 64, 64)

#radar date
configs.place=['Sun_Moon_Lake']
configs.train_date=[
# 2018
['2018-03-15 06:30', '2018-03-15 18:50'],
['2018-05-07 16:20', '2018-05-07 22:50'],
['2018-05-08 00:00', '2018-05-08 04:20'],
['2018-06-13 00:00', '2018-06-13 08:40'],
['2018-06-14 01:00', '2018-06-14 22:50'],
['2018-06-15 00:00', '2018-06-15 07:00'],
['2018-06-17 00:00', '2018-06-17 13:40'],
['2018-06-17 18:40', '2018-06-17 22:50'],
['2018-06-18 00:00', '2018-06-18 13:50'],
['2018-06-18 16:10', '2018-06-18 22:50'],
['2018-06-19 00:00', '2018-06-19 13:10'],
['2018-06-20 00:00', '2018-06-20 15:20'],
['2018-07-01 07:30', '2018-07-01 13:20'],
['2018-07-02 00:00', '2018-07-02 08:00'],
['2018-07-10 13:50', '2018-07-10 22:50'],
['2018-07-12 17:40', '2018-07-12 21:50'],
['2018-07-22 04:10', '2018-07-22 09:30'],
['2018-08-13 04:40', '2018-08-13 10:50'],
['2018-08-14 00:00', '2018-08-14 15:10'],
['2018-08-15 01:10', '2018-08-15 12:50'],
['2018-08-18 00:00', '2018-08-18 08:50'],
['2018-08-19 01:30', '2018-08-19 10:20'],
['2018-08-22 17:20', '2018-08-22 22:50'],
# ['2018-08-23 00:00', '2018-08-23 22:50'],
# ['2018-08-24 00:00', '2018-08-24 10:20'],
['2018-08-24 14:20', '2018-08-24 22:50'],
['2018-08-25 08:10', '2018-08-25 22:50'],
['2018-08-26 00:00', '2018-08-26 22:50'],
['2018-08-27 00:00', '2018-08-27 22:50'],
['2018-08-28 00:00', '2018-08-28 22:50'],
['2018-08-29 00:00', '2018-08-29 22:50'],
['2018-08-30 00:00', '2018-08-30 14:30'],
['2018-08-30 15:40', '2018-08-30 22:50'],
['2018-09-07 12:10', '2018-09-07 17:50'],
['2018-09-08 02:00', '2018-09-08 06:10'],
['2018-09-08 07:00', '2018-09-08 21:40'],
['2018-09-09 10:40', '2018-09-09 22:20'],
['2018-09-10 00:00', '2018-09-10 18:10'],
['2018-09-14 16:10', '2018-09-14 22:50'],
['2018-09-15 00:00', '2018-09-15 21:20'],
['2018-09-24 12:30', '2018-09-24 16:50'],
# 2019
['2019-04-16 06:20', '2019-04-16 10:30'],
['2019-04-18 16:30', '2019-04-18 22:50'],
['2019-04-19 04:00', '2019-04-19 17:20'],
['2019-04-20 12:40', '2019-04-20 22:30'],
['2019-04-30 16:40', '2019-04-30 22:50'],
['2019-05-01 00:00', '2019-05-01 09:00'],
['2019-05-17 00:00', '2019-05-17 05:10'],
['2019-05-18 01:00', '2019-05-18 10:00'],
['2019-05-20 00:30', '2019-05-20 12:40'],
['2019-05-27 00:00', '2019-05-27 14:00'],
['2019-05-28 00:00', '2019-05-28 05:30'],
['2019-06-04 00:00', '2019-06-04 06:50'],
['2019-06-09 18:40', '2019-06-09 22:50'],
['2019-06-10 00:00', '2019-06-10 11:30'],
['2019-06-10 12:40', '2019-06-10 22:50'],
['2019-06-11 00:00', '2019-06-11 09:20'],
['2019-06-11 18:10', '2019-06-11 22:10'],
['2019-06-12 00:00', '2019-06-12 04:30'],
['2019-06-12 04:50', '2019-06-12 09:30'],
['2019-06-13 06:10', '2019-06-13 10:10'],
['2019-06-13 10:40', '2019-06-13 22:50'],
['2019-06-14 00:00', '2019-06-14 07:40'],
['2019-06-22 14:10', '2019-06-22 22:50'],
['2019-06-23 00:00', '2019-06-23 10:30'],
['2019-06-25 01:00', '2019-06-25 11:40'],
['2019-06-27 03:00', '2019-06-27 07:50'],
['2019-07-01 15:50', '2019-07-01 21:10'],
['2019-07-02 05:10', '2019-07-02 22:50'],
['2019-07-03 00:00', '2019-07-03 07:20'],
['2019-07-11 01:00', '2019-07-11 09:10'],
['2019-07-18 00:50', '2019-07-18 10:10'],
['2019-07-19 03:30', '2019-07-19 09:40'],
['2019-07-20 00:00', '2019-07-20 04:40'],
['2019-07-21 00:00', '2019-07-21 05:50'],
['2019-07-21 16:10', '2019-07-21 22:50'],
['2019-07-27 05:30', '2019-07-27 10:10'],
['2019-08-01 05:10', '2019-08-01 13:10'],
['2019-08-08 04:30', '2019-08-08 14:30'],
['2019-08-09 12:10', '2019-08-09 18:10'],
['2019-08-13 00:00', '2019-08-13 05:00'],
['2019-08-15 00:00', '2019-08-15 05:20'],
['2019-08-15 13:40', '2019-08-15 22:50'],
['2019-08-16 00:00', '2019-08-16 10:00'],
['2019-08-16 17:50', '2019-08-16 22:50'],
['2019-08-17 05:50', '2019-08-17 13:10'],
['2019-08-18 00:00', '2019-08-18 22:50'],
['2019-08-19 00:00', '2019-08-19 12:40'],
['2019-08-20 03:50', '2019-08-20 10:50'],
['2019-08-20 13:20', '2019-08-20 17:40'],
['2019-08-24 00:00', '2019-08-24 22:50'],
['2019-08-30 04:00', '2019-08-30 15:10'],
['2019-09-01 06:20', '2019-09-01 13:30'],
['2019-09-03 05:40', '2019-09-03 11:30'],
['2019-09-04 00:50', '2019-09-04 10:40'],
['2019-09-06 06:00', '2019-09-06 22:50'],
['2019-09-27 00:00', '2019-09-27 11:20'],
['2019-09-30 00:00', '2019-09-30 10:50'],
# 2020
['2020-01-25 21:00', '2020-01-26 06:00'],
['2020-02-13 08:30', '2020-02-13 14:50'],
['2020-03-27 18:20', '2020-03-28 04:10'],
['2020-05-16 04:40', '2020-05-16 10:50'],
['2020-05-17 02:00', '2020-05-17 06:30'],
['2020-05-18 00:00', '2020-05-18 04:10'],
['2020-05-18 19:10', '2020-05-19 09:30'],
['2020-05-19 22:30', '2020-05-20 11:30'],
['2020-05-20 21:30', '2020-05-21 14:00'],
# ['2020-05-21 14:40', '2020-05-22 16:00'],
['2020-05-26 11:10', '2020-05-26 15:40'],
# ['2020-05-26 16:20', '2020-05-27 05:30'],
# ['2020-05-27 18:00', '2020-05-27 23:20'],
['2020-06-07 03:20', '2020-06-07 11:30'],
['2020-06-07 23:00', '2020-06-08 09:50'],
['2020-06-09 07:50', '2020-06-09 16:20'],
['2020-07-01 05:40', '2020-07-01 12:50'],
['2020-07-02 05:40', '2020-07-02 15:10'],
['2020-07-29 22:00', '2020-07-30 09:50'],
['2020-07-30 15:50', '2020-07-31 00:10'],
['2020-08-02 21:50', '2020-08-03 15:50'],
['2020-08-03 19:10', '2020-08-04 13:50'],
['2020-08-10 02:50', '2020-08-10 14:00'],
['2020-08-10 14:50', '2020-08-11 08:20'],
['2020-08-17 00:10', '2020-08-17 08:50'],
['2020-08-21 16:00', '2020-08-22 12:00'],
# ['2020-08-25 21:50', '2020-08-26 08:20'],
['2020-08-27 02:40', '2020-08-27 14:10'],
['2020-10-20 17:50', '2020-10-20 22:20'],
['2020-10-21 08:30', '2020-10-21 13:20'],
['2020-11-06 03:00', '2020-11-06 11:00'],
# 2021
['2021-02-10 21:20', '2021-02-11 03:20'],
['2021-05-29 01:20', '2021-05-29 05:20'],
['2021-05-29 20:20', '2021-05-30 01:10'],
['2021-05-30 03:20', '2021-05-30 13:50'],
# ['2021-06-04 19:30', '2021-06-06 10:30'],
]

configs.test_date = [['2021-06-20 19:50', '2021-06-22 12:50'],
['2021-06-22 18:00', '2021-06-23 03:50'],
['2021-06-27 04:30', '2021-06-27 16:10']]  ##注意要是OP有的日期！！



configs.one_date = [['2020-05-27 00:00', '2020-05-27 00:01'],
                    # ['2020-05-26 14:00', '2020-05-26 14:01']
                    ]

configs.one_test_date = [['2020-05-27 00:00', '2020-05-27 00:01']]


configs.pred_date = [
    # ['2020-05-22 04:00', '2020-05-22 04:01'],
    # ['2020-05-26 14:00', '2020-05-26 14:01'], # 消散生成
    # ['2020-05-27 00:00', '2020-05-27 00:01'],
    # ['2020-08-26 00:00', '2020-08-26 00:01'],
    # ['2020-08-26 04:00', '2020-08-26 04:01'],
    # ['2020-11-06 05:00', '2020-11-06 05:01'],
    #['2020-05-26 11:00', '2020-05-26 11:01'],
    # ['2020-05-26 14:00', '2020-05-26 14:01'],
    ['2020-08-26 04:00', '2020-08-26 04:01'],
    ]

import os
import datetime
today = datetime.date.today()
configs.save_path='./save_model_{}{}/'.format(today.month,today.day)
configs.save_path='./save_model/save_model_multiTask/'
if not os.path.isdir(configs.save_path):
    os.mkdir(configs.save_path)